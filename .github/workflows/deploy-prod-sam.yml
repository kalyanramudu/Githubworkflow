name: Print Loaded Environment Variables

on:
  push:
    branches:
      - Development
      - Production

permissions:
  id-token: write
  contents: read

jobs:
  print-vars:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}  # Automatically maps to Development or Production env

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Load environment variables from branch file
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          FILE=".github/envs/${BRANCH}.env"

          if [ ! -f "$FILE" ]; then
            echo "‚ùå Environment file $FILE not found!" && exit 1
          fi

          echo "‚úÖ Loading environment variables from $FILE"
          while IFS='=' read -r key value || [ -n "$key" ]; do
            if [[ "$key" =~ ^[A-Za-z_][A-Za-z0-9_]*$ ]]; then
              echo "$key=$value" >> $GITHUB_ENV
            fi
          done < "$FILE"
        shell: bash

      - name: Inject environment-specific secrets
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          echo "üîí Injecting secrets for $BRANCH"

          if [ "$BRANCH" = "Production" ]; then
            echo "AWS_REGION=${{ secrets.PROD_AWS_REGION }}" >> $GITHUB_ENV
            echo "DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }}" >> $GITHUB_ENV
            echo "API_KEY=${{ secrets.PROD_API_KEY }}" >> $GITHUB_ENV
          elif [ "$BRANCH" = "Development" ]; then
            echo "AWS_REGION=${{ secrets.DEV_AWS_REGION }}" >> $GITHUB_ENV
            echo "DB_PASSWORD=${{ secrets.DEV_DB_PASSWORD }}" >> $GITHUB_ENV
            echo "API_KEY=${{ secrets.DEV_API_KEY }}" >> $GITHUB_ENV
          fi

      - name: Print loaded environment variables
        run: |
          echo "üîç Loaded Environment Variables:"
          echo "APP_NAME=$APP_NAME"
          echo "S3_BUCKET=$S3_BUCKET"
          echo "AWS_REGION=$AWS_REGION"
          echo "DB_PASSWORD=$DB_PASSWORD"
          echo "API_KEY=$API_KEY"
          echo "APP_KEY2=$APP_KEY2"

      - name: Slack Notification
        if: always()
        run: |
          STATUS="${{ job.status }}"

          if [ "$STATUS" = "success" ]; then
            COLOR="good"
            EMOJI="‚úÖ"
            MESSAGE="*Deployment Succeeded*"
          elif [ "$STATUS" = "failure" ]; then
            COLOR="danger"
            EMOJI="‚ùå"
            MESSAGE="*Deployment Failed*"
          elif [ "$STATUS" = "cancelled" ]; then
            COLOR="warning"
            EMOJI="‚ö†Ô∏è"
            MESSAGE="*Deployment Cancelled*"
          fi

          curl -X POST -H 'Content-type: application/json' \
            --data "{
              \"attachments\": [
                {
                  \"color\": \"$COLOR\",
                  \"text\": \"$EMOJI $MESSAGE on branch \`${{ github.ref_name }}\`\nWorkflow: \`${{ github.workflow }}\`\nRun: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Logs>\"
                }
              ]
            }" \
            ${{ secrets.SLACK_WEBHOOK_URL }}
